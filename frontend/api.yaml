openapi: 3.0.0
info:
  title: Biblioteca MVP API
  version: 1.0.0
  description: Contrato API-first para MVP de biblioteca. Mock de solo estructura, respuestas aleatorias válidas.

paths:
  /books:
    post:
      summary: Registrar un libro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Libro registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Listar libros por autor
      parameters:
        - in: query
          name: author
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Lista de libros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '404':
          description: No se encontraron libros
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /loans:
    post:
      summary: Prestar un libro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanInput'
      responses:
        '201':
          description: Préstamo registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Libro no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Consultar préstamos activos
      parameters:
        - in: query
          name: userName
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Lista de préstamos activos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '404':
          description: No se encontraron préstamos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Book:
      type: object
      properties:
        id: { type: integer }
        title: { type: string }
        author: { type: string }
        isbn: { type: string }
      required: [id, title, author, isbn]

    BookInput:
      type: object
      properties:
        title: { type: string }
        author: { type: string }
        isbn: { type: string }
      required: [title, author, isbn]

    Loan:
      type: object
      properties:
        bookId: { type: integer }
        userName: { type: string }
      required: [bookId, userName]

    LoanInput:
      type: object
      properties:
        bookId: { type: integer }
        userName: { type: string }
      required: [bookId, userName]

    Error:
      type: object
      properties:
        type: { type: string }
        title: { type: string }
        status: { type: integer }
        detail: { type: string }
      required: [type, title, status, detail]
